name: Java CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  FRONTEND_REPO: ripmarkus/KINO-Frontend
  FRONTEND_IMAGE_NAME: ${{ github.repository_owner }}/kino-frontend

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165
        with:
          java-version: "21"
          distribution: "temurin"

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Run Maven tests
        run: ./mvnw test

      - name: Build Docker image
        run: docker build . --tag kinoxp:test

      - name: Run Docker
        run: |
          docker run -d --name test-container -p 8080:8080 kinoxp:test \
          sleep 30 \
          curl -f http://localhost:8080/healthz
          docker stop test-container
          docker rm test-container

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          images: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{ branch }}
            type=raw,value=latest,enable={{ is_default_branch }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
         context: .
         push: true
         tags: ${{ steps.meta.outputs.tags }}
         labels: ${{ steps.meta.outputs.labels }}

  #checkout og build vores frontend

      - name: Checkout frontend repository
        uses: actions/checkout@v5
        with:
          repository: ${{ env.FRONTEND_REPO }}
          path: frontend
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }} 

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest

